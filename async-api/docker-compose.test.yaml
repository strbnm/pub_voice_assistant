version: "3.8"
   
services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.16.2
    container_name: elasticsearch
    environment:
      - bootstrap.memory_lock=true
      - cluster.name=docker-cluster
      - cluster.routing.allocation.disk.threshold_enabled=false
      - discovery.type=single-node
      - "ES_JAVA_OPTS= -Xms512m -Xmx512m"
      - action.destructive_requires_name=false
    ulimits:
      memlock:
        hard: -1
        soft: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - tests
    healthcheck:
      interval: 30s
      retries: 10
      test: curl -s http://localhost:9200/_cluster/health | grep -vq '"status":"red"'

  async-api:
    build:
      context: .
      dockerfile: Dockerfile.api.dev
    container_name: async-api
    ports:
      - "8000:8000"
    depends_on:
      - elasticsearch
      - redis
    volumes:
      - ./src/app:/usr/src/app
    env_file:
      - .env.sample
    networks:
      - tests
    environment:
      - LOG_LEVEL=INFO
      - JAEGER_ENABLED=False

  tests-async:
    build:
      context: .
      dockerfile: Dockerfile.test
    container_name: testing-async
    depends_on:
      - elasticsearch
      - redis
    volumes:
      - ./src:/usr/src
    env_file:
      - .env.sample
    networks:
      - tests
    environment:
      - TEST_TESTING=True

  redis:
    image: redis:6.2.5
    container_name: redis
    env_file:
      - .env.sample
    ports:
      - "6379:6379"
    command:
      - redis-server
    networks:
      - tests

volumes:
  esdata:
    driver: local

networks:
  tests: