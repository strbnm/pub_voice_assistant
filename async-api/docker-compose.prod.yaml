version: "3.8"
   
services:
  db-async:
    image: postgres:13.0
    container_name: db-async
    volumes:
      - ./data:/var/lib/postgresql/data
    env_file:
      - ./.env.prod
    expose:
      - "5432"
    networks:
      - elastic

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.16.2
    container_name: elasticsearch
    environment:
      - bootstrap.memory_lock=true
      - cluster.name=docker-cluster
      - cluster.routing.allocation.disk.threshold_enabled=false
      - discovery.type=single-node
      - ES_JAVA_OPTS= -Xms512m -Xmx512m
      - action.destructive_requires_name=false
    ulimits:
      memlock:
        hard: -1
        soft: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
    expose:
      - "9200"
    networks:
      - elastic
    healthcheck:
      interval: 30s
      retries: 10
      test: curl -s http://localhost:9200/_cluster/health | grep -vq '"status":"red"'

  nginx-async:
    image: nginx:1.21-alpine
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/configs:/etc/nginx/conf.d:ro
    ports:
      - "80:80"
    depends_on:
      - async-api
    networks:
      - web-service

  async-api:
    build:
      context: .
      dockerfile: Dockerfile.api.prod
    container_name: fastapi
    depends_on:
      - elasticsearch
      - redis
    env_file:
      - .env.prod
    networks:
      - elastic
      - web-service
  
  etl:
    build:
      context: .
      dockerfile: Dockerfile.etl.prod
    container_name: etl-service
    depends_on:
      - elasticsearch
      - db-async
    volumes:
      - ./postgres_to_es:/usr/src/app/postgres_to_es
    env_file:
      - .env.prod
    networks:
      - elastic

  redis:
    image: redis:6.2.5
    container_name: redis
    env_file:
      - .env.prod
    expose:
      - "6379"
    command:
      - redis-server
    networks:
      - elastic

volumes:
  esdata:
    driver: local

networks:
  elastic:
  web-service:
